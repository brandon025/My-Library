'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IconBase = require('react-icon-base');

var TiPuzzleOutline = function (_React$Component) {
    _inherits(TiPuzzleOutline, _React$Component);

    function TiPuzzleOutline() {
        _classCallCheck(this, TiPuzzleOutline);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(TiPuzzleOutline).apply(this, arguments));
    }

    _createClass(TiPuzzleOutline, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                IconBase,
                _extends({ viewBox: '0 0 40 40' }, this.props),
                React.createElement(
                    'g',
                    null,
                    React.createElement('path', { d: 'm33.333333333333336 18.75v-2.916666666666666c0-3.216666666666667-2.616666666666667-5.833333333333334-5.833333333333336-5.833333333333334h-1.2666666666666657c-0.23333333333333428-3.303333333333333-3.253333333333334-5.833333333333334-7.066666666666666-5.833333333333334s-6.833333333333334 2.5300000000000002-7.066666666666668 5.833333333333334h-1.2666666666666657c-3.216666666666667 0-5.833333333333334 2.616666666666667-5.833333333333334 5.833333333333334v2.916666666666666c0 1.6866666666666674 0.8566666666666665 3.078333333333333 2.158333333333333 3.7433333333333323-0.5966666666666667 0.3133333333333326-1.1133333333333333 0.783333333333335-1.4900000000000002 1.375-0.43333333333333357 0.6916666666666664-0.666666666666667 1.5166666666666657-0.666666666666667 2.383333333333333v4.583333333333336c-0.001666666666666039 3.2150000000000034 2.615000000000001 5.8316666666666706 5.831666666666668 5.8316666666666706h4.583333333333334c1.6266666666666652 0 3.0500000000000007-0.8283333333333331 3.736666666666668-2.1666666666666643 0.021666666666668277 0.0416666666666643 0.03999999999999915 0.07833333333333314 0.05999999999999872 0.11166666666666458 0.7250000000000014 1.2866666666666688 2.1099999999999994 2.0549999999999997 3.703333333333333 2.0549999999999997h4.583333333333332c3.2166666666666686 0 5.833333333333336-2.616666666666667 5.833333333333336-5.833333333333336v-4.583333333333336c0-1.6883333333333326-0.8583333333333343-3.083333333333332-2.1616666666666653-3.745000000000001 1.293333333333333-0.6833333333333336 2.1616666666666653-2.0933333333333337 2.1616666666666653-3.754999999999999z m-3.333333333333332 12.083333333333336c0 1.375-1.125 2.5-2.5 2.5h-4.583333333333332c-0.5933333333333337 0-1.206666666666667-0.35999999999999943-0.6499999999999986-1.2766666666666637 0.408333333333335-0.466666666666665 0.6499999999999986-1.033333333333335 0.6499999999999986-1.6400000000000006 0-1.6116666666666681-1.6783333333333346-2.916666666666668-3.75-2.916666666666668s-3.75 1.3049999999999997-3.75 2.916666666666668c0 0.5 0.15833333333333321 0.9600000000000009 0.4250000000000007 1.3716666666666661 0.8449999999999989 1.1216666666666661 0.22666666666666657 1.5449999999999982-0.4250000000000007 1.5449999999999982h-4.5833333333333375c-1.375 0-2.5-1.125-2.5-2.5v-4.583333333333336c0-0.4299999999999997 0.18833333333333258-0.8666666666666671 0.6400000000000006-0.8666666666666671 0.17333333333333378 0 0.38333333333333286 0.06333333333333258 0.6366666666666667 0.216666666666665 0.4666666666666668 0.408333333333335 1.0333333333333332 0.6499999999999986 1.6400000000000006 0.6499999999999986 1.6099999999999994 0 2.916666666666666-1.6799999999999997 2.916666666666666-3.75s-1.3066666666666666-3.75-2.916666666666668-3.75c-0.5 0-0.9600000000000009 0.158333333333335-1.3699999999999992 0.4250000000000007-0.3949999999999996 0.283333333333335-0.7033333333333331 0.40500000000000114-0.9366666666666674 0.40500000000000114-0.43333333333333357 0-0.6099999999999994-0.408333333333335-0.6099999999999994-0.8299999999999983v-2.916666666666666c0-1.3749999999999982 1.125-2.5 2.5-2.5h4.583333333333334c0.6499999999999986 0 1.2699999999999996-0.4233333333333338 0.40499999999999936-1.545-0.24666666666666615-0.41166666666666707-0.40499999999999936-0.8716666666666661-0.40499999999999936-1.3716666666666661 0-1.6116666666666664 1.6783333333333346-2.916666666666667 3.75-2.916666666666667s3.75 1.3050000000000006 3.75 2.916666666666667c0 0.6083333333333343-0.24166666666666714 1.1733333333333338-0.6499999999999986 1.6400000000000006-0.5566666666666684 0.9166666666666661 0.05666666666666842 1.2766666666666673 0.6499999999999986 1.2766666666666673h4.583333333333332c1.375 0 2.5 1.125 2.5 2.5v2.916666666666668c0 0.4299999999999997-0.18833333333333258 0.8666666666666671-0.6400000000000006 0.8666666666666671-0.173333333333332 0-0.38333333333333286-0.06333333333333258-0.6366666666666667-0.216666666666665-0.466666666666665-0.408333333333335-1.033333333333335-0.6499999999999986-1.6400000000000006-0.6499999999999986-1.6099999999999994 0-2.916666666666668 1.6799999999999997-2.916666666666668 3.75s1.3066666666666684 3.75 2.916666666666668 3.75c0.5 0 0.9600000000000009-0.158333333333335 1.370000000000001-0.4250000000000007 0.3949999999999996-0.283333333333335 0.7033333333333331-0.4066666666666663 0.9366666666666674-0.40500000000000114 0.43333333333333357 0 0.6083333333333343 0.408333333333335 0.6083333333333343 0.8300000000000018v4.583333333333336z m-21.66666666666667-9.676666666666666c0.19333333333333513 0.053333333333334565 0.3933333333333344 0.08999999999999986 0.6083333333333343 0.08999999999999986 0.5700000000000003 0 1.1383333333333336-0.1999999999999993 1.7300000000000004-0.6066666666666656l0.11666666666666714-0.06666666666666643c0.16000000000000014-0.10666666666666558 0.3116666666666674-0.1566666666666663 0.461666666666666-0.1566666666666663 0.5899999999999999 0 1.25 0.8916666666666657 1.25 2.083333333333332s-0.6600000000000001 2.083333333333332-1.25 2.083333333333332c-0.17999999999999972 0-0.36166666666666636-0.0799999999999983-0.5399999999999991-0.23666666666666814-0.07499999999999929-0.06666666666666643-0.1533333333333342-0.12333333333333485-0.23833333333333329-0.173333333333332-0.5-0.3049999999999997-1.006666666666666-0.45833333333333215-1.5-0.45833333333333215-0.22166666666666757 0-0.43333333333333357 0.03666666666666529-0.6383333333333336 0.09666666666666757v-2.6566666666666663z m21.058333333333334 2.5966666666666676c-0.5700000000000003 0-1.1383333333333319 0.1999999999999993-1.7300000000000004 0.6066666666666656l-0.11666666666666714 0.06666666666666643c-0.16000000000000014 0.10666666666666558-0.3116666666666674 0.1566666666666663-0.46000000000000085 0.1566666666666663-0.5883333333333347 0-1.25-0.8916666666666657-1.25-2.083333333333332s0.6616666666666653-2.083333333333332 1.25-2.083333333333332c0.18333333333333357 0 0.3633333333333333 0.0799999999999983 0.5416666666666679 0.23666666666666814 0.07499999999999929 0.06666666666666643 0.15333333333333243 0.12333333333333485 0.23833333333333329 0.173333333333332 0.5033333333333339 0.3049999999999997 1.0066666666666677 0.45833333333333215 1.5 0.45833333333333215 0.22500000000000142 0 0.43333333333333357-0.03999999999999915 0.6383333333333319-0.10000000000000142v2.66c-0.19333333333333513-0.053333333333334565-0.3933333333333344-0.08999999999999986-0.6083333333333343-0.08999999999999986z m-11.571666666666665 9.579999999999998c0.16666666666666785-0.576666666666668 0.15500000000000114-1.3599999999999994-0.5083333333333329-2.326666666666668-0.023333333333333428-0.04166666666666785-0.046666666666666856-0.08333333333333215-0.07333333333333414-0.12333333333333485-0.10333333333333172-0.163333333333334-0.1566666666666663-0.31666666666666643-0.1566666666666663-0.466666666666665 0-0.5883333333333347 0.8883333333333319-1.25 2.083333333333332-1.25s2.083333333333332 0.6616666666666653 2.083333333333332 1.25c0 0.18333333333333357-0.08333333333333215 0.3633333333333333-0.23999999999999844 0.543333333333333-0.06333333333333258 0.07333333333333414-0.12166666666666615 0.14999999999999858-0.173333333333332 0.23666666666666814-0.5416666666666679 0.8949999999999996-0.5166666666666657 1.6333333333333364-0.36666666666666714 2.139999999999997h-2.6499999999999986z' })
                )
            );
        }
    }]);

    return TiPuzzleOutline;
}(React.Component);

exports.default = TiPuzzleOutline;
module.exports = exports['default'];